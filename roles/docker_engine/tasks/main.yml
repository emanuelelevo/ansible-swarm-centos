---
- block:
  - name: Get disk device name
    ansible.builtin.shell: lsscsi 1:0:0:10 | awk '{print $NF}'
    changed_when: false
    register: device_name

  - name: Create docker partition
    community.general.parted:
      device: "{{ device_name.stdout }}"
      number: 1
      state: present
      label: gpt
      fs_type: xfs

  - name: Create filesystem on docker partition
    community.general.filesystem:
      fstype: xfs
      dev: "{{ device_name.stdout }}1"
      opts: -L DOCKERVOLUME

  - name: Mount up device by label
    ansible.posix.mount:
      path: /var/lib/docker
      src: LABEL=DOCKERVOLUME
      fstype: xfs
      state: mounted

  - name: Add docker-ce yum repository
    ansible.builtin.shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    changed_when: false

  - name: Install docker-ce
    yum:
      name:
        - "{{ docker_ce_version }}"
        - "{{ docker_ce_cli_version }}"
        - "{{ containerd_version }}"

  - name: Add user into the docker group
    ansible.builtin.user:
      name: "{{ admin_username }}"
      groups: docker
      append: yes

  - name: Copy tls server files
    ansible.builtin.copy:
      src: "../files/pki/{{ item }}"
      dest: "/etc/pki/docker/server/"
      owner: root
      group: root
      mode: 0400
    loop:
      - ca.pem
      - server-cert.pem
      - server-key.pem

  - name: Copy tls client files
    ansible.builtin.copy:
      src: "../files/pki/{{ item }}"
      dest: "/etc/pki/docker/client/"
      owner: "{{ admin_username }}"
      group: "{{ admin_username }}"
      mode: 0400
    loop:
      - ca.pem
      - cert.pem
      - key.pem

  - name: Config docker env vars for user
    blockinfile:
      path: "{{ item }}/.bashrc"
      marker: "# {mark} ANSIBLE MANAGED BLOCK"
      block: "export DOCKER_HOST=tcp://127.0.0.1:2376 DOCKER_TLS_HOSTNAME=127.0.0.1 DOCKER_CERT_PATH=/etc/pki/docker/client/ DOCKER_TLS_VERIFY=1"
    loop:
      - /root
      - "/home/{{ admin_username }}"

  - name: Config systemctl docker service
    ansible.builtin.lineinfile:
      path: "/usr/lib/systemd/system/docker.service"
      regexp: "^ExecStart="
      line: "ExecStart=/usr/bin/dockerd --tlsverify --tlscacert=/etc/pki/docker/server/ca.pem --tlscert=/etc/pki/docker/server/server-cert.pem --tlskey=/etc/pki/docker/server/server-key.pem -H=0.0.0.0:2376 --containerd=/run/containerd/containerd.sock"
    notify: ["Restart docker service"]

  - name: Enable docker service
    ansible.builtin.systemd:
      name: docker
      enabled: yes
      state: started

  become: yes

- name: Install python packages
  pip:
    name:
      - "{{ pip_docker }}"
    extra_args: --user

- name: Flush handlers
  meta: flush_handlers
