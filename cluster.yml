---
- hosts: localhost
  tasks:
    - name: Create resource group
      azure_rm_resourcegroup:
        name: "{{ resource_group }}"
        location: "{{ location }}"

    - name: Create virtual network
      azure_rm_virtualnetwork:
        resource_group: "{{ resource_group }}"
        name: "{{ resource_group }}"
        address_prefixes: "10.0.0.0/8"

    - name: Add subnet
      azure_rm_subnet:
        resource_group: "{{ resource_group }}"
        name: "{{ resource_group }}"
        address_prefix: "10.1.0.0/20"
        virtual_network: "{{ resource_group }}"

    - name: Create availability set
      azure_rm_availabilityset:
        name: "{{ resource_group }}"
        location: "{{ location }}"
        resource_group: "{{ resource_group }}"
        platform_update_domain_count: 5
        platform_fault_domain_count: 2
        sku: Aligned

    - name: Create network security group that allows SSH
      azure_rm_securitygroup:
        resource_group: "{{ resource_group }}"
        name: "{{ resource_group }}"
        rules:
          - name: SSH
            protocol: Tcp
            source_address_prefix: "{{ sg_allow_address }}"
            destination_address_prefix: VirtualNetwork
            destination_port_range: 22
            access: Allow
            priority: 1001
            direction: Inbound
          - name: Docker
            protocol: Tcp
            source_address_prefix: "{{ sg_allow_address }}"
            destination_address_prefix: VirtualNetwork
            destination_port_range: 2376
            access: Allow
            priority: 1002
            direction: Inbound
          - name: Port_80
            protocol: Tcp
            source_address_prefix: "{{ sg_allow_address }}"
            destination_address_prefix: VirtualNetwork
            destination_port_range: 80
            access: Allow
            priority: 1003
            direction: Inbound

    - name: Create LB public ip address
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group }}"
        allocation_method: Static
        name: "{{ resource_group }}-lb"
        sku: "{{ sku_tier }}"

    - name: Create load balancer
      azure_rm_loadbalancer:
        resource_group: "{{ resource_group }}"
        name: "{{ resource_group }}-lb"
        location: "{{ location }}"
        sku: "{{ sku_tier }}"
        frontend_ip_configurations:
          - name: "{{ resource_group }}-frontconfig"
            public_ip_address: "{{ resource_group }}-lb"
        backend_address_pools:
          - name: "{{ resource_group }}-backend"
        probes:
          - name: "{{ resource_group }}-prob0"
            port: 2376
            interval: 10
            fail_count: 3
        load_balancing_rules:
          - name: "{{ resource_group }}-rule0"
            frontend_ip_configuration: "{{ resource_group }}-frontconfig"
            backend_address_pool: "{{ resource_group }}-backend"
            frontend_port: 2376
            backend_port: 2376
            load_distribution: Default
            probe: "{{ resource_group }}-prob0"
      register: loadbalancer

    - name: Create managers ip addresses
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group }}"
        allocation_method: Static
        name: "{{ manager_name }}{{ index }}"
        sku: "{{ sku_tier }}"
      loop: "{{ list_of_managers }}"
      loop_control:
        index_var: index

    - name: Create managers network interfaces
      azure_rm_networkinterface:
        name: "{{ manager_name }}{{ index }}"
        resource_group: "{{ resource_group }}"
        virtual_network: "{{ resource_group }}"
        subnet_name: "{{ resource_group }}"
        security_group: "{{ resource_group }}"
        ip_configurations:
          - name: "ipconfig{{ index }}"
            load_balancer_backend_address_pools:
              - "{{ loadbalancer.state.backend_address_pools[0].id }}"
            private_ip_allocation_method: Static
            private_ip_address: "{{ item }}"
            public_ip_allocation_method: Static
            public_ip_address_name: "{{ manager_name }}{{ index }}"
            primary: True
      loop: "{{ list_of_managers }}"
      loop_control:
        index_var: index

    - name: Create managers VMs
      no_log: true
      azure_rm_virtualmachine:
        resource_group: "{{ resource_group }}"
        name: "{{ manager_name }}{{ index }}"
        vm_size: Standard_DS1_v2
        admin_username: "{{ admin_username }}"
        ssh_password_enabled: false
        ssh_public_keys:
          - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
            key_data: "{{ ansible_ssh_public_key_file }}"
        network_interfaces: "{{ manager_name }}{{ index }}"
        availability_set: "{{ resource_group }}"
        managed_disk_type: Standard_LRS
        image:
          offer: "{{ image_offer }}"
          publisher: "{{ image_publisher }}"
          sku: "{{ image_sku }}"
          version: "{{ image_version }}"
        data_disks:
          - lun: 10
            disk_size_gb: 40
            caching: ReadOnly
            managed_disk_type: Standard_LRS
        tags:
          Swarm: manager
      loop: "{{ list_of_managers }}"
      loop_control:
        index_var: index

    - name: Create workers ip addresses
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group }}"
        allocation_method: Static
        name: "{{ worker_name }}{{ item }}"
        sku: "{{ sku_tier }}"
      with_sequence: "count={{ number_of_workers }}"

    - name: Create workers network interfaces
      azure_rm_networkinterface:
        name: "{{ worker_name }}{{ item }}"
        resource_group: "{{ resource_group }}"
        virtual_network: "{{ resource_group }}"
        subnet_name: "{{ resource_group }}"
        security_group: "{{ resource_group }}"
        ip_configurations:
          - name: "{{ worker_name }}{{ item }}"
            load_balancer_backend_address_pools: "{{ loadbalancer.state.backend_address_pools[0].id }}"
            private_ip_allocation_method: Dynamic
            public_ip_allocation_method: Dynamic
            public_ip_address_name: "{{ worker_name }}{{ item }}"
            primary: True
      with_sequence: "count={{ number_of_workers }}"

    - name: Create workers VMs
      no_log: true
      azure_rm_virtualmachine:
        resource_group: "{{ resource_group }}"
        name: "{{ worker_name }}{{ item }}"
        vm_size: Standard_DS1_v2
        admin_username: "{{ admin_username }}"
        ssh_password_enabled: false
        ssh_public_keys:
          - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
            key_data: "{{ ansible_ssh_public_key_file }}"
        network_interfaces: "{{ worker_name }}{{ item }}"
        availability_set: "{{ resource_group }}"
        managed_disk_type: Standard_LRS
        image:
          offer: "{{ image_offer }}"
          publisher: "{{ image_publisher }}"
          sku: "{{ image_sku }}"
          version: "{{ image_version }}"
        data_disks:
          - lun: 10
            disk_size_gb: 40
            caching: ReadOnly
            managed_disk_type: Standard_LRS
        tags:
          Swarm: worker
      with_sequence: "count={{ number_of_workers }}"